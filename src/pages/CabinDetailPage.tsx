import React from 'react';
import { useParams } from 'react-router-dom';
import { MapPin, Home, Bath, Users, Award } from 'lucide-react';
import Header from '../components/Header';
import Footer from '../components/Footer';
import PhotoGallery from '../components/PhotoGallery';
import BookingForm from '../components/BookingForm';
import { useCabin } from '../hooks/useCabins';

const CabinDetailPage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const { cabin, loading, error } = useCabin(id || '');

  if (loading) {
    return (
      <div className="min-h-screen flex flex-col bg-gray-50" style={{ zIndex: 10 }}>
        <Header phone="+7 965 411-15-55" />
        <div className="flex-grow flex items-center justify-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
        </div>
        <Footer />
      </div>
    );
  }

  if (error || !cabin) {
    return (
      <div className="min-h-screen flex flex-col bg-gray-50" style={{ zIndex: 10 }}>
        <Header phone="+7 965 411-15-55" />
        <div className="flex-grow flex items-center justify-center">
          <div className="text-center p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">–û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
            <p className="text-gray-600 mb-4">{error || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'}</p>
            <a href="/" className="mt-6 inline-block bg-blue-600 text-white px-6 py-2 rounded-xl hover:bg-blue-700 transition-colors">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            </a>
          </div>
        </div>
        <Footer />
      </div>
    );
  }

  // –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ cabin
  const cabinData = cabin as any;
  const distanceToSea = cabinData.distanceToSea;
  const mapUrl = cabinData.mapUrl || '';

  console.log('üó∫Ô∏è Raw map URL from database:', mapUrl);

  // –£–õ–£–ß–®–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Ä—Ç—ã
  const processMapUrl = (url: string): string => {
    if (!url || !url.trim()) {
      console.log('‚ùå No map URL provided');
      return '';
    }
    
    const cleanUrl = url.trim();
    console.log('üîç Processing map URL:', cleanUrl);
    
    // –ï—Å–ª–∏ —ç—Ç–æ iframe, –∏–∑–≤–ª–µ–∫–∞–µ–º src
    if (cleanUrl.includes('<iframe')) {
      const srcMatch = cleanUrl.match(/src="([^"]+)"/i);
      if (srcMatch) {
        console.log('‚úÖ Extracted from iframe:', srcMatch[1]);
        return srcMatch[1];
      }
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤–∞—è embed —Å—Å—ã–ª–∫–∞
    if (cleanUrl.includes('google.com/maps/embed')) {
      console.log('‚úÖ Already embed URL');
      return cleanUrl;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ Google Maps, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ embed
    if (cleanUrl.includes('google.com/maps') || cleanUrl.includes('maps.google.com')) {
      let embedUrl = cleanUrl;
      
      // –ó–∞–º–µ–Ω—è–µ–º –æ–±—ã—á–Ω—ã–π URL –Ω–∞ embed
      embedUrl = embedUrl.replace(/https?:\/\/(www\.)?google\.com\/maps/g, 'https://www.google.com/maps/embed');
      embedUrl = embedUrl.replace(/https?:\/\/(www\.)?maps\.google\.com/g, 'https://www.google.com/maps/embed');
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pb, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è embed
      if (!embedUrl.includes('pb=') && !embedUrl.includes('embed?')) {
        embedUrl = embedUrl.replace('/embed', '/embed?pb=!1m18!1m12!1m3!1d3000!2d0!3d0!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMDDCsDAwJzAwLjAiTiAwMMKwMDAnMDAuMCJF!5e0!3m2!1sen!2s!4v1');
      }
      
      console.log('‚úÖ Converted to embed:', embedUrl);
      return embedUrl;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ goo.gl –∏–ª–∏ maps.app.goo.gl
    if (cleanUrl.includes('goo.gl') || cleanUrl.includes('maps.app.goo.gl')) {
      console.log('‚úÖ Short URL detected, converting to embed format');
      // –î–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Å—ã–ª–æ–∫ —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π embed URL
      return `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3000!2d0!3d0!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMDDCsDAwJzAwLjAiTiAwMMKwMDAnMDAuMCJF!5e0!3m2!1sen!2s!4v1`;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ URL, –ø—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ embed-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º
    if (cleanUrl.startsWith('http')) {
      console.log('‚úÖ Converting HTTP URL to embed format');
      return `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3000!2d0!3d0!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMDDCsDAwJzAwLjAiTiAwMMKwMDAnMDAuMCJF!5e0!3m2!1sen!2s!4v1`;
    }
    
    console.log('‚úÖ Using URL as is:', cleanUrl);
    return cleanUrl;
  };

  const embedMapUrl = processMapUrl(mapUrl);
  console.log('üéØ Final embed URL:', embedMapUrl);

  return (
    <div className="min-h-screen flex flex-col bg-gray-50 main-content" style={{ zIndex: 10 }}>
      <Header phone="+7 965 411-15-55" />
      
      <main className="flex-grow pt-20">
        <div className="container mx-auto px-4 py-12">
          <div className="mb-8">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">{cabin.name}</h1>
          </div>
          
          <PhotoGallery images={cabin.images} alt={cabin.name} />
          
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-12 mt-12">
            <div className="lg:col-span-2">
              <div className="bg-white rounded-2xl shadow-sm border border-gray-100 p-8 mb-8">
                <h2 className="text-2xl font-bold text-gray-900 mb-6">–û–ø–∏—Å–∞–Ω–∏–µ</h2>
                <p className="text-gray-700 mb-8 text-lg leading-relaxed">{cabin.description}</p>
                
                <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-8">
                  <div className="flex flex-col items-center p-4 bg-gray-50 rounded-xl">
                    <Home className="w-8 h-8 text-blue-600 mb-3" />
                    <span className="text-sm text-gray-600 mb-1">–°–ø–∞–ª—å–Ω–∏</span>
                    <span className="font-bold text-gray-900 text-lg">{cabin.bedrooms}</span>
                  </div>
                  <div className="flex flex-col items-center p-4 bg-gray-50 rounded-xl">
                    <Bath className="w-8 h-8 text-blue-600 mb-3" />
                    <span className="text-sm text-gray-600 mb-1">–í–∞–Ω–Ω—ã–µ</span>
                    <span className="font-bold text-gray-900 text-lg">{cabin.bathrooms}</span>
                  </div>
                  <div className="flex flex-col items-center p-4 bg-gray-50 rounded-xl">
                    <Users className="w-8 h-8 text-blue-600 mb-3" />
                    <span className="text-sm text-gray-600 mb-1">–ì–æ—Å—Ç–∏</span>
                    <span className="font-bold text-gray-900 text-lg">–¥–æ {cabin.maxGuests}</span>
                  </div>
                  {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–æ—Ä—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ —É–∫–∞–∑–∞–Ω–æ */}
                  {distanceToSea && distanceToSea.trim() && (
                    <div className="flex flex-col items-center p-4 bg-gray-50 rounded-xl">
                      <MapPin className="w-8 h-8 text-blue-600 mb-3" />
                      <span className="text-sm text-gray-600 mb-1">–î–æ –º–æ—Ä—è</span>
                      <span className="font-bold text-gray-900 text-lg">{distanceToSea}</span>
                    </div>
                  )}
                </div>

                {/* –õ–æ–∫–∞—Ü–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ */}
                {cabin.location && cabin.location.trim() && (
                  <div className="mb-8">
                    <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
                      <MapPin className="w-5 h-5 mr-2 text-blue-500" />
                      –õ–æ–∫–∞—Ü–∏—è
                    </h3>
                    <p className="text-gray-700 text-lg">{cabin.location}</p>
                  </div>
                )}
                
                <h3 className="text-xl font-bold text-gray-900 mb-4">–£–¥–æ–±—Å—Ç–≤–∞</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {cabin.amenities.map((amenity, index) => (
                    <div key={index} className="flex items-center p-3 bg-gray-50 rounded-lg">
                      <Award className="w-5 h-5 text-blue-500 mr-3" />
                      <span className="text-gray-700">{amenity}</span>
                    </div>
                  ))}
                </div>
              </div>
              
              {/* –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Å–µ–∫—Ü–∏—è –∫–∞—Ä—Ç—ã */}
              <div className="bg-white rounded-2xl shadow-sm border border-gray-100 p-8">
                <h2 className="text-2xl font-bold text-gray-900 mb-6">–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ</h2>
                <p className="text-gray-700 mb-6 text-lg leading-relaxed">
                  –û–±—ä–µ–∫—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –∂–∏–≤–æ–ø–∏—Å–Ω–æ–º –º–µ—Å—Ç–µ –Ω–∞ –±–µ—Ä–µ–≥—É –º–æ—Ä—è. –ò–∑ –æ–∫–æ–Ω –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è 
                  –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π –≤–∏–¥ –Ω–∞ –º–æ—Ä—Å–∫–æ–π –ø–µ–π–∑–∞–∂.
                  {distanceToSea && distanceToSea.trim() && ` –í ${distanceToSea} —Ö–æ–¥—å–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–µ—Å—á–∞–Ω—ã–π –ø–ª—è–∂.`}
                </p>
                
                {/* –ü–û–õ–ù–û–°–¢–¨–Æ –ü–ï–†–ï–†–ê–ë–û–¢–ê–ù–ù–ê–Ø –∫–∞—Ä—Ç–∞ */}
                <div className="map-container">
                  {embedMapUrl ? (
                    <div className="relative w-full h-96 rounded-xl overflow-hidden border border-gray-200 bg-gray-100">
                      <iframe
                        src={embedMapUrl}
                        width="100%"
                        height="100%"
                        style={{ 
                          border: 0,
                          position: 'relative',
                          zIndex: 1
                        }}
                        allowFullScreen={true}
                        loading="lazy"
                        referrerPolicy="no-referrer-when-downgrade"
                        title="–ö–∞—Ä—Ç–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞"
                        className="absolute inset-0"
                        onLoad={() => {
                          console.log('‚úÖ Map iframe loaded successfully');
                        }}
                        onError={(e) => {
                          console.log('‚ùå Map iframe failed to load:', e);
                        }}
                      />
                      
                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
                      <div className="absolute inset-0 bg-gray-100 flex items-center justify-center pointer-events-none">
                        <div className="text-center">
                          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2"></div>
                          <p className="text-gray-500 text-sm">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É...</p>
                        </div>
                      </div>
                    </div>
                  ) : (
                    <div className="w-full h-96 bg-gradient-to-br from-blue-100 to-indigo-100 rounded-xl flex items-center justify-center border border-gray-200">
                      <div className="text-center">
                        <MapPin className="w-16 h-16 text-blue-600 mx-auto mb-4" />
                        <p className="text-blue-800 font-medium text-lg">–ö–∞—Ä—Ç–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏</p>
                        {distanceToSea && distanceToSea.trim() && (
                          <p className="text-blue-600 mt-2">–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–æ—Ä—è: {distanceToSea}</p>
                        )}
                        <p className="text-blue-500 text-sm mt-2">–ö–∞—Ä—Ç–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ</p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </div>
            
            <div className="lg:col-span-1">
              <div className="sticky top-24">
                <BookingForm 
                  cabinId={cabin.id} 
                  pricePerNight={cabin.pricePerNight} 
                  maxGuests={cabin.maxGuests} 
                />
              </div>
            </div>
          </div>
        </div>
      </main>
      
      <Footer />
    </div>
  );
};

export default CabinDetailPage;