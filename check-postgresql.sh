#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ PostgreSQL..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã
echo "üìä –°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã PostgreSQL:"
systemctl status postgresql --no-pager -l

echo ""
echo "üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
sudo -u postgres psql -d vgosti_db -c "
SELECT 
    'Database: ' || current_database() as info
UNION ALL
SELECT 
    'User: ' || current_user
UNION ALL
SELECT 
    'Version: ' || version()
UNION ALL
SELECT 
    'Time: ' || now()::text;
"

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:"
sudo -u postgres psql -d vgosti_db -c "
SELECT 
    schemaname,
    tablename,
    n_tup_ins as inserts,
    n_tup_upd as updates,
    n_tup_del as deletes
FROM pg_stat_user_tables;
"

echo ""
echo "üíæ –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
sudo -u postgres psql -d vgosti_db -c "
SELECT 
    pg_database.datname,
    pg_size_pretty(pg_database_size(pg_database.datname)) AS size
FROM pg_database 
WHERE datname = 'vgosti_db';
"

echo ""
echo "üìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü:"
sudo -u postgres psql -d vgosti_db -c "\dt"

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
cd /var/www/vgosty05/nazirabaza
node -e "
const { Pool } = require('pg');
require('dotenv').config({ path: './server/.env' });

const pool = new Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
});

pool.query('SELECT NOW() as current_time, COUNT(*) as cabin_count FROM cabins')
  .then(result => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    console.log('–í—Ä–µ–º—è:', result.rows[0].current_time);
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–º–∏–∫–æ–≤:', result.rows[0].cabin_count);
    process.exit(0);
  })
  .catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message);
    process.exit(1);
  });
"